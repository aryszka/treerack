error reporting
- longest parse
- count the lines
- print the line
- print the deepest non-alias node name
- print the documentation of the node name
- make it work with custom tokens
read, with error reporting
what was the bug with the large json from eskip?

[next]
missing tests, coverage:
- validation
- error cases
- whitespace cases
error reporting
coverage
custom tokens
indentation
streaming
code generation go:
- find things that depend on the syntax input
- char matches can be generated into switches
code generation js
documentation flag
support custom tokenization
streaming
verify choice and sequence preference
formatter
pretty
report unused parsers
go through the tests for docs
test all docs
warn nows usage in docs, e.g. spaces in symbol = [a-z]+
test error report on invalid flag
report unused definitions
simplify generated output
parse hashed, storing only the results

[optimization]
try preallocate larger store chunks
notes in formatting
format: test back and forth equivalence of char classes
format: test comments, first apply comments in the syntax

[problems]
can the root be an alias? check the commit mechanism

[documentation]
how the char classes are different from regexp
why need nows when using ws
