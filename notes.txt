[next]
no random generator output and generator output check
errors
generator 1
releasing
parser
generator 2
formatter
report unused parsers
parse hashed, storing only the results
linux packaging

[errors]
take the last
test error report on invalid flag
input name: may be just dropped because completely controlled by the client
input name needed in command to differentiate between syntax and input in check and parse subcommands

[generator 1]
allchars: can have char sequence
make generator output non-random (track parsers in a list in definition order)
fix the license in the output
play with the int sizes

[releasing]
spellcheck
linting
convert notes into issues
try to remove some files

[parser]
custom tokens
indentation
streaming support // ReadNode(io.Reader)

[generator 2]
js

[optimization]
try preallocate larger store chunks

[documentation]
how the char classes are different from regexp
why need nows when using ws
lib only useful for dynamic syntax definition
warn nows usage in docs, e.g. spaces in symbol = [a-z]+
